version: '3'
# TODO - clean up ports for ui / api / postgres - likely unecessary
services:
  ui:
    container_name: ui_test
    working_dir: /usr/create-app/ui
      - DOCKER_VARIANT=compose_routing
      - REACT_APP_DOCKER_VARIANT=nginx_routing
    build:
      context: ../ui
      dockerfile: ../ui/Dockerfile.prod
    ports:
      - "3000:3000"
  ## TODO - remove this for no-data version
  postgres:
    container_name: pgdb_test
    build:
      context: ../db
    ports:
      - "5432:5432"
    # TODO - replace this by creating a default superadmin with SQL for phase 4
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
  api:
    container_name: api_test
    working_dir: /usr/create-app/api
    environment:
      - DOCKER_VARIANT=compose_routing
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - WAIT_HOSTS=postgres:5432
    ports:
      - "4000:4000"
    build:
      context: ../api
      dockerfile: ops/Dockerfile.dev
    volumes:
      - ../api:/usr/create-app/api
      - /usr/create-app/api/node_modules
    command: |
      sh -c "/wait && npm start"
  nginx:
    restart: always
    build:
      dockerfile: ../nginx/Dockerfile.prod
      context: ../nginx
    ports:
      - '5000:5000'
  e2e:
    container_name: e2e_test
    working_dir: /usr/create-app/e2e
    environment:
      - WAIT_HOSTS=chromedriver:4444, ngnix:5000
    build:
      context: ../e2e
      dockerfile: ../e2e/ops/Dockerfile
    volumes:
      - ../e2e:/usr/create-app/e2e
      - /usr/create-app/e2e/node_modules
    command: |
      sh -c "/wait && npm run test-docker"
  chromedriver:
    container_name: chromedriver
    image: selenium/standalone-chrome:latest
    ports:
      - "4444:4444"